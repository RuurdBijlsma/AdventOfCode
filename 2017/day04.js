//////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////// PART 1 //////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////

hasDuplicate = phrase => {
    for (let i = 0; i < phrase.length; i++)
        for (let j = i + 1; j < phrase.length; j++)
            if (phrase[i] === phrase[j])
                return true;
    return false;
}

phrases = input.split('\n').map(p => p.split(" "));
phrases.filter(p => !hasDuplicate(p)).length;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////// PART 2 //////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////

sortWord = word => word.split('').sort().join('');

hasDuplicate = phrase => {
    for (let i = 0; i < phrase.length; i++)
        for (let j = i + 1; j < phrase.length; j++)
            if (sortWord(phrase[i]) === sortWord(phrase[j]))
                return true;
    return false;
}

phrases = input.split('\n').map(p => p.split(" "));
phrases.filter(p => !hasDuplicate(p)).length;